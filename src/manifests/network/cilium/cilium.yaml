---
# Source: cilium/templates/hubble-relay-client-tls-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lSQU1BbmR6ZXU5ejlEZm5xcms5czByY3N3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRBeE16QXdPVE0xTVRsYQpGdzB5TkRBeE16QXdPVE0xTVRsYU1DTXhJVEFmQmdOVkJBTU1HQ291YUhWaVlteGxMWEpsYkdGNUxtTnBiR2wxCmJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOQXcraVp2UzhnSEFiQ2IKaFNZRG9HV1JISFlENTFJWXlSaTB6NjZibjZFa2NFaCs0NGw5Y1pBa0RvenBwd3BOTDNvSUNYVjkwalhHc0Q3UAo5aDNUMmU0a3ZUV3BIdHhGLzdyVVNCL3hTNnU1Lys1UjZObmhDaXBRcnkxTE1Lb0F0LzZFVVNreldBT1ZZbHVPCmxaUWNGSUducHJERU5iSWNCL0U4ZVdzVVd0VEFQb01sZzZMUkZ1aFFwTTQ3VGphV1hYMzc0NjZYa0w5bUxvTzQKbHhuN3BiZ05uYUs4ZzV0V3RNMDRHeHlaL0puNnZmdjdYaGJ4bzhpaWIyM043aElydWRkWi9KVXE2ZlZGNysreQpMWWs3TG15eHByM3ByeWQwUUZ4VHFTblZqU0pIR1BWOXltWEJGbVk1cVlmVzNxUnppUGYyYXBNa3RrR2ZMOUh4ClZ0Ym5HZ2NDQXdFQUFhTmtNR0l3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUYKQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bApMWEpsYkdGNUxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF2V0NuN2g4bFUzeWNZU29pCjZMbXIvY3ZKQU1YdkhzbVVObno5bDlWZUZvT3l3M3E3VkdwRXQ4SUYrT0hZTTRhQTRzanpLNUVXWjdDek1hbGUKNHBFOG4ybFJTRTJoVlljOHJjYkhaT3lDR2lxSkFFaHBaY2tpNkJSdWhRRjVOd0I1Z2dpOGxCYWxnOG1ZT0lyQwpWcmNHekVobVVPbFQrV1dGZVlvYVhwZTBySjZzQjdIU1NXWTFaNjVRZUo2cmVMdUpwR1hFaVdaN3lYaE5KdDFKCmVyU2NVVnp4dkFZdzdTY1lkNVV3d29GblpCNGJUb0pRNkliMHVrMGZSWngvQUhHbW81ZXdQUEJHdnRFdzFZRFQKVDNJMVV0ZG1HSW4rREdQejlpSHdrY1QwZGJ0djFrZlM1eFROVGhBbUFUdDgxRmI1dCtkVDNDcVVPaVlRT1NaMApBSEpIRmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMERENkptOUx5QWNCc0p1RkpnT2daWkVjZGdQblVoakpHTFRQcnB1Zm9TUndTSDdqCmlYMXhrQ1FPak9tbkNrMHZlZ2dKZFgzU05jYXdQcy8ySGRQWjdpUzlOYWtlM0VYL3V0UklIL0ZMcTduLzdsSG8KMmVFS0tsQ3ZMVXN3cWdDMy9vUlJLVE5ZQTVWaVc0NlZsQndVZ2FlbXNNUTFzaHdIOFR4NWF4UmExTUErZ3lXRApvdEVXNkZDa3pqdE9OcFpkZmZ2anJwZVF2Mll1ZzdpWEdmdWx1QTJkb3J5RG0xYTB6VGdiSEpuOG1mcTkrL3RlCkZ2R2p5S0p2YmMzdUVpdTUxMW44bFNycDlVWHY3N0l0aVRzdWJMR212ZW12SjNSQVhGT3BLZFdOSWtjWTlYM0sKWmNFV1pqbXBoOWJlcEhPSTkvWnFreVMyUVo4djBmRlcxdWNhQndJREFRQUJBb0lCQUNibnNDZDBqdTNQV1dKKwpmWkJRQnk1VHdzVFBEL0JJajNQZGZoMzhHUVdOQUtxYmc3dlN4R0VTUytITFhCclJ0N2lQUGUxRjJQMlJwcWZtClJ2RG1BUWkrdHRrTFJLZ1hNS1hpTzZRMGZGYVlDSnFwbGVENWErUGlkZ241emh0R3pSdHo4SkxKZEg0ZThXVjQKckwwanpqVTRkaTc4UzZpQUVuL2pOREZ0ZVZmZVNwSTlRZnoyRlhWdWZrb1RuVWlNbCtTV2MyTVFjSmtiQTg0TwpySURtQW9TQlVFL09xdk9JMjBZaW5pT2FIcnBZNHgrRExZcy9XVy8reHAxOCtCc3VHcjYwZFBnbEMybTR6bitpCk5iVWx2SmlreHFQQUJsSzI5V1VOWjI1TWZPNnAwdmVBLzhDSGVGUkIxcEdXdVFudkJXbW0xaXFOVjJlekdHTXoKZTBBT1Jua0NnWUVBOTNka0FQNWp5c0djaXhUMEQzYStpbjZ2MlFNY1lqTFFuWG03eVZRTC9wc3RqZDRiRlgwawp2ZFJpRkpNaDBlT2dqanQ3THROOXltVXBJNmxTTWIzUlR1aVVmYW1DWkVBeUhqVVpYdlhRTFVTM2pLNnhzOWpmCk9lL2VDakxqdk9jdVVqQm95ZnpyTWV1UU1wc1p3bk5oSkp1REFyQlQvdVNScFFaWFBuVjBEQ3NDZ1lFQTExN2UKdjd6SEMrZStsQ2w4OEFaa3ZsZGF3Z3F5eFNwVHMreTc3Z2tibjhrMEtKUFgzZWRFRWlBU3lQa0xiQkVFV1VIUwpYOVZXWEl4VnVpRlg3K3BKWE1Pdm5maE42cXlRdGVYUFJmSWtOZzNNYkRLU293U085ZjVkL1lsUFJDZjV2andLCnk2ajJKaDdhSnNYL3pIbDZsaTRWSXdDU0YyN2t4NE0zb2Q2d2o1VUNnWUVBMWFjSWVpc244VGZ6ZGNqalppNTUKRjQyRk9QR01vZU9KWlV4aXF0R2JnWGhzZmgyU2VKMFJDYXZCK2syRlYzY1ZlWGMxUlJwbmNrU2duaDlqelhvNgpxY3YzMS81dml5bzVtd2J4SHFGUDJLV0phemF3U2J3bURobGdOS0gzS1hMVzlUTENaaEdzNWU2aEVuQUNiM1c2Ckd5Y0FsMk94UVZJSnhOYVNvR1E3aXYwQ2dZQi9jbmFpUkJZTjUzK1JzZE5yUG4xVFhlSXBQYWQ0b1ltU3laNlUKUi9OKzVOUG14MFpRM0ZBZDRiajhFTlEvaVBwbnoxbXN1RlE0eEJyZTRHaG5ZdDh5OCtIeXUwTndnZG5JcWt1egorb3lQS0M4MlA5OGlkTW9jcS8vMnp0Q0hacGlWaUhaaStvTmZINWE4cHlLdVg1eTVUbC9YckxqSEFTcUZIaE5ICnlMMzIyUUtCZ0hyUWI0V29Fd1dnNWJaNVR4RUM4NWZUa3hBUFdlMVdMbDRJbm9yTmgxSDZsOHU5ejk5ejl6d0YKQjFYSlJDOWdzRnZuQnprWTJYaDNKcDdxVnFrbGdZaUMxMG9WL2h2dHIvSTAzd3FaZmc1UVZJSHd5dGY1bDZNTgo3SXRSRHZudWZzU2g1U3c5aWZnVmVnbG5Ya0ZqaTZpaWN6RDFwelVFUzdsVmFuU1BWWDloCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble-server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQakNDQWlhZ0F3SUJBZ0lSQVBENW9vUWdNRjIrS3EvYTIyN2gyZnN3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TVRBeE16QXdPVE0xTVRsYQpGdzB5TkRBeE16QXdPVE0xTVRsYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDL2tyTUEKR3VuT3pkcmdoRi8zQnF2TE9QVm1sZE1wcTIraU50MzFZOVJvbnJ2M0syUFlTL0FESnd0cXo0ZXRkOElRQVpnbwo1c0FVSUVPRVJqYUhhN2RjMXpnZ3oxTzZMMUo3MW1zVEk4VXEycm9iV1hCR2tZZ2xYdjF1YkVTSmh3NExyK1duCmhxcU95TEc1cllTNVFzOFd5c0h5WjUyTWhnTmdPemdFd1dxNk0rZy9VbnNyUXhPc2gwbjZFZGlHdkl0OVVrcHAKYzZUcUJCSkEzNVQzdmJKSHllM09nczJ5M1cwWERFSlBlZEE5S1lFTmxVcEdMRW1FZ25SQkZPZWorSTBCNEdxagpINkRRaXhnT3I2OEdvUnN2cnd5eGR0RVJsNFI4TlFENEtRNDg2c0hEM0IxMzMrVGtlTUtRR29La0hWMjRudmhKCnROR09oTUJSdUpGSEpsbkpBZ01CQUFHamF6QnBNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVUKQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFxQmdOVkhSRUVJekFoZ2g4cQpMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCCkFRQ0lUcFNKYnNJOXFjOWFMeWI3MnBoREdpVStmVzFxZ0VCZUU2NmVHVlZibmtWTGRPYnFqVkRlcXAzeWIrb1YKOVVSSDd2SC9vN3U0Nk5yMDlvbDhvelg5STE4K0QrVzR1bFppNG1NNkM5djFqc055b0dIUWY5Z2J3K29EbGt2QQpaWlhPWDlaRUtjNml0OGs5QUVnN0NHRHlzZkl3S2NBSkhuajZLRTRHNUIzdldkMEp2aDVuK3BxSmZtVnBIMk1QCmtNQUpmWW1lbnAwTmFZa080eXg0NG9VWjZzWXhTUVl5SzlNK0NHMGQ3L2hlSHhGT3kzN1M5Y1kxcEZaSnFDUFAKNkUxblF4L1BPVVdHeHE4ckVDMVdXMGVocXB2akI1TkZxM0huVVhtT0haMDQwZE44SGRKTC9XWTF5M0dQRERldQpKc0RGZytZaCtNak0rUUdnODJIemRHM2oKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjVLekFCcnB6czNhNElSZjl3YXJ5emoxWnBYVEthdHZvamJkOVdQVWFKNjc5eXRqCjJFdndBeWNMYXMrSHJYZkNFQUdZS09iQUZDQkRoRVkyaDJ1M1hOYzRJTTlUdWk5U2U5WnJFeVBGS3RxNkcxbHcKUnBHSUpWNzlibXhFaVljT0M2L2xwNGFxanNpeHVhMkV1VUxQRnNyQjhtZWRqSVlEWURzNEJNRnF1alBvUDFKNwpLME1UcklkSitoSFlocnlMZlZKS2FYT2s2Z1FTUU4rVTk3MnlSOG50em9MTnN0MXRGd3hDVDNuUVBTbUJEWlZLClJpeEpoSUowUVJUbm8vaU5BZUJxb3grZzBJc1lEcSt2QnFFYkw2OE1zWGJSRVplRWZEVUErQ2tPUE9yQnc5d2QKZDkvazVIakNrQnFDcEIxZHVKNzRTYlRSam9UQVViaVJSeVpaeVFJREFRQUJBb0lCQUFqSzh1eE9UK3p1QmQzSQpOWjlnN3dHazI1Nlp3ZGRueHZmckRNVDJrQWs5UCtOWVduelMvM0VsbWFDTlplelFVbGZwdXRJbHhTc25UL0lDClJ2NXdNenBQcG9QYkFEekxiejIvMmFwSE9nVjloSTA4emFwdmc1QXppKzVGaWQvR0V4NzJNOVE4bWhkem5yU24KQWpCK29JS3JTN3VVaGVhdFAvcHF2V2Q2ZVN1U29mQzFqclJPYjJHYjEwVUpjVU9BNWdudnJMUTdsVlFzam9GcgpKUE1IQzNGOHVoRXNQblJraGY0T1FuOW1pV01Qam50RTV4aGdFcDlPYVl1dVdIL1NOeml5WDIzdFQ4Y09uVlEzCmR6dEtLK2VpY2g0VzFqU1A3elZoMmhOdmpUaUxiVHdweTBjZXFBeFkxNUx4Y3Rxd1d2RlphdHpOaFd1ZHhiNkcKNlNZdlR3RUNnWUVBekJoVnNZdzBNOW5OTFZFWFFBZVMzQ0syVk9SeHdUNFFTR2hRUm1ZY3JWVHZHLzZqbHMzNgpZYVZHRVQ3L1FmUlB4bnFHQnNTRVQxRUZRMy9kaldrMzJSUEVuMnZOVGd3UGVaZ2toZXVQcTViWGF4MmJYYlRrCkViOVpPRm9ZdUVmS0pzckV5WkE3N3l2SWRTZGVIUy9yS2d5dEdqZUdQalhUaE1XOUtMVzBPUk1DZ1lFQThFc2QKaExKZGlnZzljUUxLWmwrbzMzUCt6RllCRTFvVzl2UlZrczgvRzE4WWVYcm94eTRxVk1IQXNxQU0zeXQrWFE2dgp2a3FUK2tFRW0zaGYyUVlZblRiUzdwaEhvQU5DRGVHMXdyNWFXd1NPb1lnem1JVUhqWVR3UVZ2aCsyVnBwVGgrCkx3K2xaSEhON1JaRUVyZ0NFQjlSZ2s2K3VnN2pmL0prOTh0SGVUTUNnWUFJeVA5ZlRoNnRJTEh4UW0xU3gwQ3UKRXh4d0dRbEFmVEJzUFhrL0hvUWJmZTF3OGd3T29MMG5XTnJrUVNieHF0ZUlQcHZvVEtzNVVzNThNbFBTRTNaZwo5TFhnK3QzeWZ4aG5ib0liOWFEUWpRU215cloyV1NQOEU1VitsSG85N0hFcUxFNCtNdVF4amx2cGx4RTVCbWdECi9sbXhLRFN5RnRVTkFRbjhaNTNqV3dLQmdRREtlREJ1SURDSzN2aU9ZYkNUWkNVUjYxWVZiSjVKWlE2V2xUZ0oKbE5EeXlrVUFEeDFXdjBKeDJqUDVEcnpweW1jV0dBcmpCMG42Z3BCVVE3QlhXRGlqTjQreDlPUGRJd0drV3J2aApWSzBqcGdwY2R6d3FWbVVQektUNEhXaWpnRWJ0TFZXOVo2eVBud2pKcllvOFQ0bUZkaTRpNHlEMyt4V2NPR3oxCkVmYXVXd0tCZ0QwWEZwOEc4cDFDaHpjVU1Va3JaYy96eHR1aHgzaW4yNUpnR0l2cXR0WlZ3LzJtU0dBVVo3UjcKVU9oRGViTC9xVDB4Z2FabjUrMHBFKytXSDdoZVZqQWQ2dXlZdFRlL1ZTMEtCbThqZGI5VHpkWU5DcnJuOEw5cQpMem0zUHpEVkZHVld1ZUNiYjNGVkpBdTNMUjlPZXZ3Zmxha1l5cmx1UVMvSkZKek1uTDJrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in a kvstore, etcd or consul, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  # wait-bpf-mount makes init container wait until bpf filesystem is mounted
  wait-bpf-mount: "false"

  masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"
  kube-proxy-replacement:  "probe"
  kube-proxy-replacement-healthz-bind-address: ""
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.0.0.0/8"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
---
# Source: cilium/templates/hubble-ca-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ca-cert
  namespace: kube-system
data:
  ca.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIDCTCCAfGgAwIBAgIRAPCIbZlLLrvEpms4T4wzmkEwDQYJKoZIhvcNAQELBQAw
    HjEcMBoGA1UEAxMTaHViYmxlLWNhLmNpbGl1bS5pbzAeFw0yMTAxMzAwOTM1MTla
    Fw0yNDAxMzAwOTM1MTlaMB4xHDAaBgNVBAMTE2h1YmJsZS1jYS5jaWxpdW0uaW8w
    ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDBcS4CEPirFxOKKyxn00Xk
    PuticVaHfxhlVX9GPvgl4iKDIHrKpHHDa3I87sqs0OisEx+5GDOXorLFIyvXE0aM
    7wInQUkz1yocVh7XpjFO5fxbl4ChpCb0jxvkYsNQuM6oCVTFZty80JFmUkpo9A0u
    7yBHNz1gFc0r1Szo2FpsbARts0F2BVhKhwJcs3Hu7C8zUMeoBda6GAqVpf2W4WlU
    +lOSLJB0N5Lg9JDlkm5RB3bkd8aimJkq7Pgp5gqDSTEErgT3zTs3CRxsEsptmHqz
    u3uAWbbAlkAuXBjgHjlmrbLNdI0rH/6MmBcWXqfe2dvpvgu8WdaApGIAyYNa7KUF
    AgMBAAGjQjBAMA4GA1UdDwEB/wQEAwICpDAdBgNVHSUEFjAUBggrBgEFBQcDAQYI
    KwYBBQUHAwIwDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAm0Oc
    6URT4yDZftGYQMZGmbAA16mTu2r4gtTEfFm5JUVLQJwSNR+fV5osTHymWLdgZYMI
    Y9beND1ZqVZkYULm1JMPzR62eaKikkx9bj7e73TpTJUebauquACcYrvLhQBiAtqn
    O/aqv0FCT3qJutwj3AEATvwihHUR7hAG18P8iCEOY2zmr20Tecs78Irx2o/k9j1r
    QqAsUEGHm9MP5+QoQ4tqTtvEVxE1+a2rk66VO3pa7lLIHNU9noRoEaK2vzr63T7N
    zaaCttXc/o5a2aZGQQFQTGTNtYDCY65LYfJ7kzqyiF1eFISEkwVUmggjBeLKykEf
    4tuuYjolJ9VBpg3WeQ==
    -----END CERTIFICATE-----
---
# Source: cilium/templates/hubble-relay-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    peer-service: unix:///var/run/cilium/hubble.sock
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  config:
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ['*']
                          routes:
                            - match:
                                prefix: '/api/'
                              route:
                                cluster: backend
                                max_grpc_timeout: 0s
                                prefix_rewrite: '/'
                            - match:
                                prefix: '/'
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: '*'
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: '1728000'
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          hosts:
            - socket_address:
                address: 127.0.0.1
                port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          hosts:
            - socket_address:
                address: 127.0.0.1
                port_value: 8090
---
# Source: cilium/templates/cilium-agent-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - nodes
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  - pods/finalizers
  verbs:
  - get
  - list
  - watch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between mulitple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
# The support for leases was introduced in coordination.k8s.io/v1 during Kubernetes 1.14 release.
# In Cilium we currently don't support HA mode for K8s version < 1.14. This condition make sure
# that we only authorize access to leases resources in supported K8s versions.
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-relay-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-relay
rules:
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/hubble-ui-clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-relay
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-relay
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: hubble-relay
---
# Source: cilium/templates/hubble-ui-clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  namespace: kube-system
  name: hubble-ui
---
# Source: cilium/templates/hubble-relay-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui-service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  labels:
    k8s-app: hubble-ui
  namespace: kube-system
spec:
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
  type: ClusterIP
---
# Source: cilium/templates/cilium-agent-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 10
          # The initial delay for the liveness probe is intentionally large to
          # avoid an endless kill & restart cycle if in the event that the initial
          # bootstrapping takes longer than expected.
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_FLANNEL_MASTER_DEVICE
          valueFrom:
            configMapKeyRef:
              key: flannel-master-device
              name: cilium-config
              optional: true
        - name: CILIUM_FLANNEL_UNINSTALL_ON_EXIT
          valueFrom:
            configMapKeyRef:
              key: flannel-uninstall-on-exit
              name: cilium-config
              optional: true
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.9.3
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        name: cilium-agent
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
          privileged: true
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/opt/cni/bin
          name: cni-path
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
          # Needed to be able to load kernel modules
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
      hostNetwork: true
      initContainers:
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: CILIUM_WAIT_BPF_MOUNT
          valueFrom:
            configMapKeyRef:
              key: wait-bpf-mount
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.9.3
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
          mountPropagation: HostToContainer
        - mountPath: /var/run/cilium
          name: cilium-run
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
        # To keep state between restarts / upgrades for bpf maps
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      # To install cilium cni plugin in the host
      - hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
        # To install cilium cni configuration in the host
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
        # To be able to load kernel modules
      - hostPath:
          path: /lib/modules
        name: lib-modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          defaultMode: 420
          optional: true
          secretName: cilium-clustermesh
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - name: hubble-tls
        projected:
          sources:
          - secret:
              name: hubble-server-certs
              items:
                - key: tls.crt
                  path: server.crt
                - key: tls.key
                  path: server.key
              optional: true
          - configMap:
              name: hubble-ca-cert
              items:
                - key: ca.crt
                  path: client-ca.crt
              optional: true
---
# Source: cilium/templates/cilium-operator-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  # We support HA mode only for Kubernetes version > 1.14
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.9.3
        imagePullPolicy: IfNotPresent
        name: cilium-operator
        livenessProbe:
          httpGet:
            host: '127.0.0.1'
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
        # To read the configuration from the config map
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
# Source: cilium/templates/hubble-relay-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  labels:
    k8s-app: hubble-relay
  namespace: kube-system
spec:

  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: quay.io/cilium/hubble-relay:v1.9.3
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - mountPath: /var/run/cilium
            name: hubble-sock-dir
            readOnly: true
          - mountPath: /etc/hubble-relay
            name: config
            readOnly: true
          - mountPath: /var/lib/hubble-relay/tls
            name: tls
            readOnly: true
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 0
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
      - configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
        name: config
      - hostPath:
          path: /var/run/cilium
          type: Directory
        name: hubble-sock-dir
      - projected:
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
          - configMap:
              name: hubble-ca-cert
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
        name: tls
---
# Source: cilium/templates/hubble-ui-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      containers:
        - name: frontend
          image: "quay.io/cilium/hubble-ui:v0.7.3"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
          resources:
            {}
        - name: backend
          image: "quay.io/cilium/hubble-ui-backend:v0.7.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - containerPort: 8090
              name: grpc
          resources:
            {}
        - name: proxy
          image: "docker.io/envoyproxy/envoy:v1.14.5"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: http
          command: ["envoy"]
          args:
            [
              "-c",
              "/etc/envoy.yaml",
              "-l",
              "info"
            ]
          volumeMounts:
            - name: hubble-ui-envoy-yaml
              mountPath: /etc/envoy.yaml
              subPath: envoy.yaml
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
        - name: hubble-ui-envoy-yaml
          configMap:
            name: hubble-ui-envoy
